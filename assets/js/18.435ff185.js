(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{206:function(e,a,s){"use strict";s.r(a);var t=s(3),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[e._v("#")]),e._v(" Run")]),e._v(" "),s("h2",{attrs:{id:"requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),s("p",[e._v("Note: we shall enable we have "),s("code",[e._v("clickhouse-server")]),e._v(" and "),s("code",[e._v("kafka")]),e._v(" envs, before running clickhouse_sinker.")]),e._v(" "),s("h2",{attrs:{id:"configs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configs"}},[e._v("#")]),e._v(" Configs")]),e._v(" "),s("blockquote",[s("p",[e._v("There are two ways to pass the local config, multiple files and single file.")])]),e._v(" "),s("ul",[s("li",[s("p",[e._v("For multiple files:")]),e._v(" "),s("p",[s("code",[e._v("./clickhouse_sinker --local-cfg-dir conf")])]),e._v(" "),s("p",[s("code",[e._v("conf")]),e._v(" is the configuration directorys, and it'll read "),s("code",[e._v("conf/config.json")]),e._v(" as main config and all tasks files in "),s("code",[e._v("conf/tasks/*.json")]),e._v(" as task configs")])]),e._v(" "),s("li",[s("p",[e._v("For single file:")]),e._v(" "),s("p",[s("code",[e._v("./clickhouse_sinker --local-cfg-file config_single.json")]),e._v(".")])])]),e._v(" "),s("blockquote",[s("p",[e._v("Read more detail descriptions of config in "),s("RouterLink",{attrs:{to:"/guide/docs/config.html"}},[e._v("here")])],1)]),e._v(" "),s("h2",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Let's use single file to test "),s("code",[e._v("clickhouse_sinker")])]),e._v(" "),s("ul",[s("li",[s("p",[e._v("let's touch config.json\n"),s("code",[e._v("touch config.json")])])]),e._v(" "),s("li",[s("p",[e._v("put sample config into the config file")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "clickhouse": {\n    "default": {\n      "db": "default",\n      "hosts": [\n        [\n          "127.0.0.1"\n        ]\n      ],\n      "port": 9000\n    }\n  },\n  "kafka": {\n    "default": {\n      "brokers": "127.0.0.1:9092",\n      "version": "2.2.1"\n    }\n  },\n  "common": {\n    "bufferSize": 90000,\n    "minBufferSize": 1,\n    "msgSizeHint": 1000,\n    "flushInterval": 5,\n    "logLevel": "debug"\n  },\n  "tasks": {\n      "logstash": {\n            "name" : "logstash",\n            "kafkaClient": "kafka-go",\n            "kafka": "default",\n            "topic": "logstash",\n            "consumerGroup" : "logstash_sinker",\n            "parser" : "json",\n            "clickhouse" : "default",\n            "tableName" : "logstash",\n\n            "autoSchema" : true,\n            "@desc_of_exclude_columns" : "this columns will be excluded by insert SQL ",\n            "excludeColumns" : ["day"]\n      }\n  }\n}\n')])])])]),e._v(" "),s("li",[s("p",[e._v("Create a simple table in Clickhouse")]),e._v(" "),s("blockquote",[s("p",[e._v("It's not the duty for clickhouse_sinker to auto create table, so we should maually do that.")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("CREATE TABLE logstash\n(\n    `time` DateTime,\n    `day` Date DEFAULT toDate(time),\n    `request_uri` String,\n    `age` UInt8\n)\nENGINE = Memory\n\nOk.\n\n0 rows in set. Elapsed: 0.014 sec.\n\n")])])])]),e._v(" "),s("li",[s("p",[e._v("Enable topic is created in kafka")]),e._v(" "),s("blockquote",[s("p",[e._v("I use "),s("a",{attrs:{href:"https://github.com/birdayz/kaf",target:"_blank",rel:"noopener noreferrer"}},[e._v("kaf"),s("OutboundLink")],1),e._v(" tool to create topics.")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("kaf topic create logstash -p 1 -r 1\n✅ Created topic!\n      Topic Name:            logstash\n      Partitions:            1\n      Replication Factor:    1\n      Cleanup Policy:        delete\n")])])])]),e._v(" "),s("li",[s("p",[e._v("Run clickhouse_sinker")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("./clickhouse_sinker --local-cfg-file config.json\n")])])])]),e._v(" "),s("li",[s("p",[e._v("Send messages to the topic")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('echo \'{"time" : "2020-12-18T03:38:39.000Z", "age" : 33 }\' | kaf -b \'127.0.0.1:9092\' produce logstash\necho \'{"time" : "2020-12-18T03:38:39.000Z", "age" : 33 }\' | kaf -b \'127.0.0.1:9092\' produce logstash\necho \'{"time" : "2020-12-18T03:38:39.000Z", "age" : 33 }\' | kaf -b \'127.0.0.1:9092\' produce logstash\n')])])]),s("ul",[s("li",[e._v("Check the data in clickhouse")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SELECT *\nFROM logstash\n\n┌────────────────time─┬────────day─┬─request_uri─┬─age─┐\n│ 2020-12-18 11:38:39 │ 2020-12-18 │             │  33 │\n│ 2020-12-18 11:38:39 │ 2020-12-18 │             │  33 │\n│ 2020-12-18 11:38:39 │ 2020-12-18 │             │  33 │\n└─────────────────────┴────────────┴─────────────┴─────┘\n\n3 rows in set. Elapsed: 0.016 sec.\n\n")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);